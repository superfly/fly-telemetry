api: {enabled: true}
sources:
  logs_in:    { type: vector, address: '[::]:6000'}
  metrics_in: { type: vector, address: '[::]:6001'}

transforms:
  logs:
    type: remap
    inputs: [logs_in]
    source: ". = merge!(., parse_json(.message) ?? {})"

  metrics:
    type: log_to_metric
    inputs: [metrics_in]
    all_metrics: true
    metrics: []

sinks:
  metrics_out:
    inputs: [metrics]
    type: prometheus_remote_write
    endpoint: 'http://localhost:8428/prometheus/api/v1/write'
    healthcheck: {enabled: false}

  logs_out:
    inputs: [logs]
    type: elasticsearch
    endpoints: ['http://localhost:9428/insert/elasticsearch/']
    api_version: v8
    compression: gzip
    healthcheck: {enabled: false}
    query:
      _msg_field: message
      _time_field: timestamp
      _stream_fields: region,host,fly.app.name,fly.app.instance

  s3_logs:
    inputs: [logs]
    type: aws_s3
    bucket: "${BUCKET_NAME?}"
    region: "${AWS_REGION?}"
    compression: gzip
    framing: {method: newline_delimited}
    encoding: {codec: json}
    key_prefix: "{{fly.app.name}}/%F/"
    endpoint: ${AWS_ENDPOINT_URL_S3:-null}
  s3_metrics:
    inputs: [metrics]
    type: aws_s3
    bucket: "${BUCKET_NAME?}"
    region: "${AWS_REGION?}"
    compression: gzip
    framing: {method: newline_delimited}
    encoding: {codec: json}
    key_prefix: "{{tags.app}}/metrics/%F/"
    endpoint: ${AWS_ENDPOINT_URL_S3:-null}
