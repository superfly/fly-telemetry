api: {enabled: true}
sources:
  logs:
    type: nats
    url: "nats://[fdaa::3]:4223"
    subject: 'logs.>'
    auth: {strategy: user_password, user_password: {user: "${ORG-personal}", password: "${ACCESS_TOKEN?}"}}
    connection_name: Fly logs stream
    queue: "${FLY_APP_NAME}"
    decoding:
      codec: vrl
      vrl:
        source: |
          . = parse_json!(.message)
          . = merge!(., parse_json(.message) ?? {})

  metrics_in:
    type: nats
    url: "nats://[fdaa::3]:4223"
    subject: 'metrics.>'
    auth: {strategy: user_password, user_password: {user: "${ORG-personal}", password: "${ACCESS_TOKEN?}"}}
    connection_name: Fly metrics stream
    queue: "${FLY_APP_NAME}"
    decoding:
      codec: vrl
      vrl:
        source: |
          metric = array!(parse_json!(decode_zstd(.message) ?? "[]"))
          for_each(metric) -> |_idx, val| {val.timestamp = parse_timestamp!(val.timestamp, "%+")}
          . = metric
  metrics_vector: {type: vector, address: '[::]:6000'}
  logs_vector:    {type: vector, address: '[::]:6001'}

transforms:
  metrics:
    type: log_to_metric
    inputs: [metrics_in]
    all_metrics: true
    metrics: []

sinks:
  metrics_db:
    inputs: [metrics, metrics_vector]
    type: prometheus_remote_write
    endpoint: 'http://localhost:8428/prometheus/api/v1/write'
    healthcheck: {enabled: false}
    batch: {aggregate: false}

  logs_db:
    inputs: [logs, logs_vector]
    type: elasticsearch
    endpoints: ['http://localhost:9428/insert/elasticsearch/']
    api_version: v8
    compression: gzip
    healthcheck: {enabled: false}
    query:
      _msg_field: message
      _time_field: timestamp
      _stream_fields: region,host,fly.app.name,fly.app.instance
